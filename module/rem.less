.rem(@size: @cfg-rem-size) {
  font-size: 100% / 16px * @size;
}

// !define px and rem value for a given property
.rem(@property, @value, @html: @cfg-rem-size) when not (ispixel(@value)) and not (@property = only) and not (@property = print) {
  .rem(print, @property, round(@value, @cfg-decimal-rem), round(0px + @value * @html, @cfg-decimal-px));
}
.rem(@property, @value, @html: @cfg-rem-size) when (ispixel(@value)) and not (@property = only) and not (@property = print) {
  .rem(print, @property, round(0rem + @value / @html, @cfg-decimal-rem), round(@value, @cfg-decimal-px));
}
.rem(only, @property, @value, @html: @cfg-rem-size) when (ispixel(@value)) {
  .rem(print, @property, round(0rem + @value / @html, @cfg-decimal-rem));
}
.rem(print, @property, @rem) {
  .PlastiCSS(print, "@{property}: @{rem}");
}
.rem(print, @property, @rem, @px) {
  .PlastiCSS(print, "@{property}: @{px}; @{property}: @{rem}");
}
//
// !Flow: Define a vertical rhythm
// ===============================
//

// The font-limit property specify the maximum coefficient
// applied to the base font-size.
// Commonly, the font-size of the h1 element will be equal to
// @cfg-font-size * @cfg-font-limit.
@cfg-font-limit:  3;

// The font-flow property specify the margin position of
// verticaly rhytmed elements.
// The <font-flow> may take one of the following values:
//
//  + top:    top: 1, bottom: 0
//  + bottom: top: 0, bottom: 1
//  + middle: top: 1, bottom: 1
//  + both:   top: 2, bottom: 1
@cfg-font-flow:   @flow-both;

// The font-ease property specify the easing function used to
// distribute font-size across headings elements.
// The <font-ease> may take one of the following values:
//
//  + linear
//  + easeInQuad
//  + easeOutQuad
//  + easeInCubic
//  + easeOutCubic
//  + easeInQuart
//  + easeOutQuart
//  + easeInQuint
//  + easeOutQuint
@cfg-font-ease:   linear;

// !"Constants"
@flow-top:    top;
@flow-bottom: bottom;
@flow-middle: middle;
@flow-both:   both;

@flow-line-height: @cfg-font-size * @cfg-line-height;

// !Config

// !Flow
.flow(
  @font-size:        @cfg-font-size,
  @base-line-height: @flow-line-height,
  @margin:           @cfg-font-flow,
  @head:             false
) when not (iskeyword(@font-size)) {
  // font-size
  .flow(font-size, @font-size);

  // line-height
  .flow(line-height, @font-size, @base-line-height);
  
  // margin
  .flow(margin, @font-size, @base-line-height, @margin, @head);
}

// Font-size
.flow(font-size,
  @font-size:        @cfg-font-size,
) when (isem(@font-size)) {
  font-size: round(@font-size / @cfg-font-size, @cfg-decimal-em);
}
.flow(font-size,
  @font-size:        @cfg-font-size,
) when not (isem(@font-size)) {
  .rem(font-size, round(@font-size, @cfg-decimal-px));
}

// Line-height
.flow(line-height,
  @font-size:        @cfg-font-size,
  @base-line-height: @flow-line-height
) when (isem(@font-size)) {
  @line-height: @base-line-height / @font-size;
  @coef: ceil(1 / @line-height);
  line-height: round(@line-height * @coef, @cfg-decimal-em);
}
.flow(line-height,
  @font-size:        @cfg-font-size,
  @base-line-height: @flow-line-height
) when not (isem(@font-size)) {
  @line-height: @base-line-height / @font-size;
  @coef: ceil(1 / @line-height);
  .rem(line-height, @base-line-height * @coef);
}

// Flow margin
.flow(margin, @font-size, @base-line-height: @flow-line-height, @margin: @cfg-font-flow, @head: false) when (@margin = @flow-top) {
  .flow(margin-css, @font-size, @base-line-height, 0);
}
.flow(margin, @font-size, @base-line-height: @flow-line-height, @margin: @cfg-font-flow, @head: false) when (@margin = @flow-bottom) {
  .flow(margin-css, @font-size, 0, @base-line-height);
}
.flow(margin, @font-size, @base-line-height: @flow-line-height, @margin: @cfg-font-flow, @head: false) when (@margin = @flow-both) and (@head = true) {
  .flow(margin-css, @font-size, @base-line-height * 2, @base-line-height);
}
.flow(margin, @font-size, @base-line-height: @flow-line-height, @margin: @cfg-font-flow, @head: false) when (@margin = @flow-middle), (@margin = @flow-both) and not (@head = true) {
  .flow(margin-css, @font-size, @base-line-height, @base-line-height);
}

// em
.flow(margin-css, @font-size, @top, @bottom) when (isem(@font-size)) {
  margin-bottom: round(@bottom / @font-size, @cfg-decimal-em);
  margin-top: round(@top / @font-size, @cfg-decimal-em);
}
// px/rem
.flow(margin-css, @font-size, @top, @bottom) when not (isem(@font-size)) {
  .rem(margin-bottom, @bottom);
  .rem(margin-top, @top);
}


// !flow-heads
.flow-heads(
  @font-size:   @cfg-font-size,
  @line-height: @cfg-line-height,
  @margin:      @cfg-font-flow,
  @multiply:    @cfg-font-limit,
  @ease:        linear,
  @head:        true
) {
  &1 { .flow-ease(@font-size, @line-height, @margin, @multiply, 1, 6, @ease, @head) }
  &2 { .flow-ease(@font-size, @line-height, @margin, @multiply, 2, 6, @ease, @head) }
  &3 { .flow-ease(@font-size, @line-height, @margin, @multiply, 3, 6, @ease, @head) }
  &4 { .flow-ease(@font-size, @line-height, @margin, @multiply, 4, 6, @ease, @head) }
  &5 { .flow-ease(@font-size, @line-height, @margin, @multiply, 5, 6, @ease, @head) }
  &6 { .flow-ease(@font-size, @line-height, @margin, @multiply, 6, 6, @ease, @head) }
}

// t: current time, b: begInnIng value, c: change In value, d: duration
.flow-ease(
  @font-size:   @cfg-font-size,
  @line-height: @cfg-line-height,
  @margin:      @cfg-font-flow,
  @multiply:    @cfg-font-limit,
  @t:           1,
  @d:           6,
  @ease:        @cfg-font-limit,
  @head:        true
) {
  .flow-ease(_private,
    @font-size * @line-height, @margin,
    @font-size * @multiply,
    @font-size - @font-size * @multiply,
    @t - 1, @d, @ease, @head);
}

// !flow-ease: linear
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, linear, @head) {
  @font-size: @c * @t/@d + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeInQuad
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeInQuad, @head) {
  @font-size: @c * (@t/@d) * (@t/@d) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeOutQuad
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeOutQuad, @head) {
  @font-size: -@c * (@t/@d) * (@t/@d - 2) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeInCubic
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeInCubic, @head) {
  @font-size: @c * (@t/@d) * (@t/@d) * (@t/@d) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeOutCubic
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeOutCubic, @head) {
  @font-size: @c * ((@t/@d - 1) * (@t/@d - 1) * (@t/@d - 1) + 1) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeInQuart
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeInQuart, @head) {
  @font-size: @c * (@t/@d) * (@t/@d) * (@t/@d) * (@t/@d) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeOutQuart
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeOutQuart, @head) {
  @font-size: -@c * ((@t/@d - 1) * (@t/@d - 1) * (@t/@d - 1) * (@t/@d - 1) - 1) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeInQuint
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeInQuint, @head) {
  @font-size: @c * (@t/@d) * (@t/@d) * (@t/@d) * (@t/@d) * (@t/@d) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}

// !flow-ease: easeOutQuint
.flow-ease(_private, @line-height, @margin, @b, @c, @t, @d, easeOutQuint, @head) {
  @font-size: @c * ((@t/@d - 1) * (@t/@d - 1) * (@t/@d - 1) * (@t/@d - 1) * (@t/@d - 1) + 1) + @b;
  .flow(@font-size, @line-height, @margin, @head);
}